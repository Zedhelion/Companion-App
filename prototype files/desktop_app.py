# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'desktop_app_ui.ui'
#
# Created by: PyQt5 UI code generator 5.15.6
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.

from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import QMessageBox, QAbstractItemView, QTableWidgetItem
import mysql.connector
import socket
import tqdm
import os
import csv
import test_connect3
from time import sleep
import threading
import subprocess

class Ui_MainWindow(object):
    def connectDatabase(self):
        try:
            self.mydb = mysql.connector.connect(
                host="localhost",
                user="root",
                password="Admin123",
                database="test"
                )

            self.mycursor = self.mydb.cursor()

        except mysql.connector.Error as err:
            self.errorDisplay(err.errno, err.sqlstate, err.msg)

    def errorDisplay(self, errorCode, sqlState, text):
        error1 = "Error Code: " + str(errorCode)
        error2 = "SQL State: " + sqlState
        error3 = "Description: "+ text
        QMessageBox.critical(self,"Error", error1 + error2 + error3)

    def receive_data(self):
        SERVER_HOST = "0.0.0.0"
        SERVER_PORT = 4899
        BUFFER_SIZE = 4096
        SEPARATOR = "<SEPARATOR>"

        s = socket.socket()

        s.bind((SERVER_HOST, SERVER_PORT))

        s.listen(5)
        print(f"[*] Listening as {SERVER_HOST}:{SERVER_PORT}")

        client_socket, address = s.accept() 
        # if below code is executed, that means the sender is connected
        print(f"[+] {address} is connected.")

        received = client_socket.recv(BUFFER_SIZE).decode()
        filename, filesize = received.split(SEPARATOR)
        filename = os.path.basename(filename)
        filesize = int(filesize)

        progress = tqdm.tqdm(range(filesize), f"Receiving {filename}", unit="B", unit_scale=True, unit_divisor=1024)
        with open(filename, "wb") as f:
            while True:
                bytes_read = client_socket.recv(BUFFER_SIZE)
                if not bytes_read:    
                    break
                f.write(bytes_read)
                progress.update(len(bytes_read))

        client_socket.close()
        s.close()
        self.receive_data()

    def start_threading(self):
        x = threading.Thread(target=self.receive_data)
        x.start()
        print(threading.activeCount())
    
    def export(self):
        print("export")
    
    def setupUi(self, MainWindow):
        self.connectDatabase()
        self.start_threading()
        MainWindow.setObjectName("MainWindow")
        MainWindow.setWindowModality(QtCore.Qt.WindowModal)
        MainWindow.resize(1920, 1080)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(MainWindow.sizePolicy().hasHeightForWidth())
        MainWindow.setSizePolicy(sizePolicy)
        MainWindow.setMinimumSize(QtCore.QSize(800, 600))
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setMinimumSize(QtCore.QSize(1920, 1080))
        self.centralwidget.setObjectName("centralwidget")
        self.Background = QtWidgets.QLabel(self.centralwidget)
        self.Background.setGeometry(QtCore.QRect(0, 0, 1981, 1083))
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.Background.sizePolicy().hasHeightForWidth())
        self.Background.setSizePolicy(sizePolicy)
        self.Background.setMinimumSize(QtCore.QSize(1920, 1080))
        self.Background.setMouseTracking(True)
        self.Background.setFocusPolicy(QtCore.Qt.NoFocus)
        self.Background.setStyleSheet("background-color: qlineargradient(spread:reflect, x1:0, y1:0, x2:0.46, y2:0.4375, stop:0 rgba(255, 171, 114, 255), stop:1 rgba(255, 122, 105, 255));")
        self.Background.setFrameShape(QtWidgets.QFrame.WinPanel)
        self.Background.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.Background.setText("")
        self.Background.setPixmap(QtGui.QPixmap("abstract-white-graphic-design-presentation-background-web-template_156943-914.png"))
        self.Background.setScaledContents(True)
        self.Background.setObjectName("Background")
        self.topbanner = QtWidgets.QLabel(self.centralwidget)
        self.topbanner.setGeometry(QtCore.QRect(0, 0, 1920, 131))
        self.topbanner.setMinimumSize(QtCore.QSize(680, 0))
        self.topbanner.setMaximumSize(QtCore.QSize(1920, 1080))
        font = QtGui.QFont()
        font.setFamily("Bahnschrift SemiBold")
        font.setPointSize(48)
        font.setBold(True)
        font.setWeight(75)
        self.topbanner.setFont(font)
        self.topbanner.setStyleSheet("background-color: rgb(195, 29, 57);\n"
"color: rgb(0, 0, 0);\n"
"")
        self.topbanner.setFrameShape(QtWidgets.QFrame.NoFrame)
        self.topbanner.setFrameShadow(QtWidgets.QFrame.Plain)
        self.topbanner.setAlignment(QtCore.Qt.AlignCenter)
        self.topbanner.setObjectName("topbanner")
        self.AccessHistory = QtWidgets.QLabel(self.centralwidget)
        self.AccessHistory.setGeometry(QtCore.QRect(620, 214, 680, 61))
        self.AccessHistory.setMaximumSize(QtCore.QSize(680, 1080))
        font = QtGui.QFont()
        font.setFamily("Bahnschrift SemiBold")
        font.setPointSize(24)
        font.setBold(True)
        font.setWeight(75)
        self.AccessHistory.setFont(font)
        self.AccessHistory.setStyleSheet("background-color: rgb(209, 209, 209);")
        self.AccessHistory.setAlignment(QtCore.Qt.AlignHCenter|QtCore.Qt.AlignTop)
        self.AccessHistory.setObjectName("AccessHistory")
        self.TheCompanionApp = QtWidgets.QLabel(self.centralwidget)
        self.TheCompanionApp.setGeometry(QtCore.QRect(620, 160, 680, 61))
        self.TheCompanionApp.setMaximumSize(QtCore.QSize(1920, 1080))
        font = QtGui.QFont()
        font.setFamily("Bahnschrift SemiBold")
        font.setPointSize(28)
        font.setBold(True)
        font.setWeight(75)
        self.TheCompanionApp.setFont(font)
        self.TheCompanionApp.setStyleSheet("background-color: rgb(209, 209, 209);\n"
"")
        self.TheCompanionApp.setAlignment(QtCore.Qt.AlignBottom|QtCore.Qt.AlignHCenter)
        self.TheCompanionApp.setObjectName("TheCompanionApp")
        self.frameTable = QtWidgets.QFrame(self.centralwidget)
        self.frameTable.setGeometry(QtCore.QRect(0, 270, 1920, 700))
        self.frameTable.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frameTable.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frameTable.setObjectName("frameTable")
        self.gridLayout_5 = QtWidgets.QGridLayout(self.frameTable)
        self.gridLayout_5.setObjectName("gridLayout_5")
        self.frame = QtWidgets.QFrame(self.frameTable)
        self.frame.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame.setObjectName("frame")
        self.tableWidget = QtWidgets.QTableWidget(self.frame)
        self.tableWidget.setGeometry(QtCore.QRect(10, 10, 609, 631))
        self.tableWidget.setMinimumSize(QtCore.QSize(0, 0))
        self.tableWidget.setMaximumSize(QtCore.QSize(16777215, 16777215))
        self.tableWidget.setEditTriggers(QtWidgets.QAbstractItemView.NoEditTriggers)
        self.tableWidget.setShowGrid(True)
        self.tableWidget.setObjectName("tableWidget")
        self.tableWidget.setColumnCount(4)
        self.tableWidget.setRowCount(0)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(2, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(3, item)
        self.tableWidget.horizontalHeader().setVisible(False)
        self.gridLayout_5.addWidget(self.frame, 0, 1, 1, 1)
        self.frame_2 = QtWidgets.QFrame(self.frameTable)
        self.frame_2.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_2.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_2.setObjectName("frame_2")


        self.Export_2 = QtWidgets.QPushButton(self.frame_2)
        self.Export_2.setGeometry(QtCore.QRect(20, 30, 151, 131))
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(8)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.Export_2.sizePolicy().hasHeightForWidth())
        self.Export_2.setSizePolicy(sizePolicy)
        self.Export_2.setMinimumSize(QtCore.QSize(0, 45))
        font = QtGui.QFont()
        font.setFamily("Bahnschrift SemiBold")
        font.setPointSize(14)
        font.setBold(True)
        font.setWeight(75)
        self.Export_2.setFont(font)
        self.Export_2.setStyleSheet("image: url(:/export/export.png);\n"
"background-image: url(:/export/export.png);\n"
"background-color: rgb(209, 209, 209);")
        self.Export_2.setText("")
        self.Export_2.setObjectName("Export_2")
        self.Export_2.clicked.connect(self.export)


        self.Refresh = QtWidgets.QPushButton(self.frame_2)
        self.Refresh.setGeometry(QtCore.QRect(20, 180, 151, 131))
        self.Refresh.setMinimumSize(QtCore.QSize(0, 45))
        font = QtGui.QFont()
        font.setFamily("Bahnschrift SemiBold")
        font.setPointSize(14)
        font.setBold(True)
        font.setWeight(75)
        self.Refresh.setFont(font)
        self.Refresh.setStyleSheet("image: url(:/refresh/refresh.png);\n"
"background-image: url(:/refresh/refresh.png);\n"
"background-color: rgb(209, 209, 209);")
        self.Refresh.setText("")
        self.Refresh.setObjectName("Refresh")
        self.Stop = QtWidgets.QPushButton(self.frame_2)
        self.Stop.setGeometry(QtCore.QRect(20, 490, 151, 131))
        self.Stop.setMinimumSize(QtCore.QSize(0, 45))
        font = QtGui.QFont()
        font.setFamily("Bahnschrift SemiBold")
        font.setPointSize(14)
        font.setBold(True)
        font.setWeight(75)
        self.Stop.setFont(font)
        self.Stop.setStyleSheet("background-image: url(:/stop/stop.png);\n"
"image: url(:/stop/stop.png);\n"
"background-color: rgb(209, 209, 209);")
        self.Stop.setText("")
        self.Stop.setObjectName("Stop")
        self.Export_3 = QtWidgets.QPushButton(self.frame_2)
        self.Export_3.setGeometry(QtCore.QRect(20, 340, 151, 121))
        self.Export_3.setMinimumSize(QtCore.QSize(0, 45))
        font = QtGui.QFont()
        font.setFamily("Bahnschrift SemiBold")
        font.setPointSize(14)
        font.setBold(True)
        font.setWeight(75)

        self.Export_3.setFont(font)
        self.Export_3.setStyleSheet("background-image: url(:/listen/listen.png);\n"
"image: url(:/listen/listen.png);\n"
"background-color: rgb(209, 209, 209);")
        self.Export_3.setText("")
        self.Export_3.setObjectName("Export_3")
        #self.Export_3.clicked.connect(self.start_threading)

        self.gridLayout_5.addWidget(self.frame_2, 0, 2, 1, 1)
        self.frameTableList = QtWidgets.QFrame(self.frameTable)
        self.frameTableList.setMaximumSize(QtCore.QSize(700, 16777215))
        self.frameTableList.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frameTableList.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frameTableList.setObjectName("frameTableList")
        self.gridLayout = QtWidgets.QGridLayout(self.frameTableList)
        self.gridLayout.setObjectName("gridLayout")
        self.gridLayout_5.addWidget(self.frameTableList, 0, 0, 1, 1)
        self.TUPLOGO = QtWidgets.QLabel(self.centralwidget)
        self.TUPLOGO.setGeometry(QtCore.QRect(630, 170, 91, 91))
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.TUPLOGO.sizePolicy().hasHeightForWidth())
        self.TUPLOGO.setSizePolicy(sizePolicy)
        self.TUPLOGO.setMaximumSize(QtCore.QSize(115, 115))
        self.TUPLOGO.setStyleSheet("")
        self.TUPLOGO.setFrameShape(QtWidgets.QFrame.NoFrame)
        self.TUPLOGO.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.TUPLOGO.setText("")
        self.TUPLOGO.setPixmap(QtGui.QPixmap("306923334_441149988133144_8535244359366534707_n.png"))
        self.TUPLOGO.setScaledContents(True)
        self.TUPLOGO.setObjectName("TUPLOGO")
        self.GreenCross = QtWidgets.QLabel(self.centralwidget)
        self.GreenCross.setGeometry(QtCore.QRect(1200, 170, 91, 91))
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.GreenCross.sizePolicy().hasHeightForWidth())
        self.GreenCross.setSizePolicy(sizePolicy)
        self.GreenCross.setMaximumSize(QtCore.QSize(115, 115))
        self.GreenCross.setStyleSheet("")
        self.GreenCross.setFrameShape(QtWidgets.QFrame.NoFrame)
        self.GreenCross.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.GreenCross.setText("")
        self.GreenCross.setPixmap(QtGui.QPixmap("green_cross.png"))
        self.GreenCross.setScaledContents(True)
        self.GreenCross.setObjectName("GreenCross")
        MainWindow.setCentralWidget(self.centralwidget)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "First Aid Cabinet"))
        self.topbanner.setText(_translate("MainWindow", "The Companion App"))
        self.AccessHistory.setText(_translate("MainWindow", "Access History"))
        self.TheCompanionApp.setText(_translate("MainWindow", "First Aid Cabinet"))
        item = self.tableWidget.horizontalHeaderItem(0)
        item.setText(_translate("MainWindow", "Name"))
        item = self.tableWidget.horizontalHeaderItem(1)
        item.setText(_translate("MainWindow", "ID Number"))
        item = self.tableWidget.horizontalHeaderItem(2)
        item.setText(_translate("MainWindow", "Type of Injury"))
        item = self.tableWidget.horizontalHeaderItem(3)
        item.setText(_translate("MainWindow", "Time and Date"))
        self.Export_2.setToolTip(_translate("MainWindow", "<html><head/><body><p>Exports CSV file of stored data</p></body></html>"))
        self.Refresh.setToolTip(_translate("MainWindow", "<html><head/><body><p>Refreshes the displayed information</p></body></html>"))
        self.Stop.setToolTip(_translate("MainWindow", "<html><head/><body><p>Stops waiting for emergencies</p></body></html>"))
        self.Export_3.setToolTip(_translate("MainWindow", "<html><head/><body><p>Waits for incoming emergencies</p></body></html>"))


import test

if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
